image: node:8

# Build - Build necessary JS files
# Test - Run tests
# Deploy - Deploy application to S3/ElasticBeanstalk
stages:
  - build

before_script:
  - apt-get update && apt-get install -y libmagick++-dev
  - ln -s `ls /usr/lib/x86_64-linux-gnu/ImageMagick-*/bin-Q16/Magick++-config | head -n 1` /usr/local/bin/
  - npm install -g ganache-cli truffle
  - npm install

  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh

  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

  - ssh-keyscan github.com >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

  - git submodule update --init --recursive
  - git submodule foreach --recursive git submodule update --init
  - cd muzika-contract/ && npm install && cd ../
  - npm run contract:compile

# Job: Build
# Installs npm packages, transpiles ES6 -> ES5
# Passes node_modules/, dist/ onto next steps using artifacts
test:core:
  stage: build
  script:
    - npm run lint
    - npm run build:core
  tags:
    - frontend

# Job: Build
# Installs npm packages, transpiles ES6 -> ES5
# Passes node_modules/, dist/ onto next steps using artifacts
test:web:
  stage: build
  script:
    - npm run build:studio
  tags:
    - frontend
