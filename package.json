{
  "name": "muzika-platform",
  "version": "0.1.0",
  "license": "MIT",
  "main": "main.js",
  "author": "Muzika Foundation",
  "description": "Decentralized Music platform",
  "scripts": {
    "postinstall": "node hooks/npm_postinstall",
    "postinstall:web": "node hooks/npm_postinstall-web",
    "ng": "ng",
    "start:studio": "npm run electron:clean-cache && npm run postinstall && cross-env ENV=dev node hooks/set_environments.js && npm-run-all -p serve:studio-renderer electron:serve",
    "start:studio:stage": "npm run electron:clean-cache && npm run postinstall && cross-env ENV=stage node hooks/set_environments.js && npm-run-all -p serve:studio-renderer:stage electron:serve",
    "ss": "npm run start:studio",
    "sss": "npm run start:studio:stage",
    "serve:studio-renderer": "ng serve muzika-studio-renderer --hmr",
    "serve:studio-renderer:stage": "npm run serve:studio-renderer -- -c stage",
    "tsc:studio-main": "node hooks/symlink_node_modules.js && tsc -p projects/studio-main/tsconfig.build.json",
    "build:core": "ng build muzika-core",
    "build:studio": "npm run postinstall && ng build muzika-studio-renderer",
    "build:studio:stage": "npm run build:studio -- -c stage",
    "build:studio:prod": "npm run build:studio -- -c production",
    "electron:clean-cache": "rm -rf projects/.cache",
    "electron:compile": "cd projects/studio-main && electron-compile --appdir `pwd` .",
    "electron:ready": "npx electron-builder install-app-deps && npm link projects/core && npm link @muzika/core",
    "electron:serve": "wait-on http-get://localhost:4200/ && electron projects/studio-main/es6-init.js --serve --debug --verbose --inspect=5858",
    "electron:build": "npm run build:studio:stage && lerna run --stream --scope muzika-studio-main build",
    "electron:publish": "npm run build:studio:stage && lerna run --stream --scope muzika-studio-main publish",
    "preelectron:dev": "cross-env ENV=dev node hooks/set_environments.js",
    "electron:dev": "npm run build:studio && electron projects/studio-main",
    "preelectron:linux": "cross-env ENV=stage node hooks/set_environments.js",
    "electron:linux": "npm run build:studio:stage && npm run electron:build -- -- --linux",
    "electron:linux:publish": "npm run build:studio:stage && npm run electron:publish -- -- --linux",
    "preelectron:windows": "cross-env ENV=stage node hooks/set_environments.js",
    "electron:windows": "npm run build:studio:stage && npm run electron:build -- -- --windows",
    "electron:windows:publish": "npm run build:studio:stage && npm run electron:publish -- -- --windows",
    "preelectron:mac": "cross-env ENV=stage node hooks/set_environments.js",
    "electron:mac": "npm run electron:build -- -- --mac",
    "electron:mac:publish": "npm run build:studio:stage && npm run electron:publish -- -- --mac",
    "publish:core": "npm run build:core && npm publish dist/muzika-core/ --access=public",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e",
    "contract:compile": "cd muzika-contract/ && npm run contract:compile && npm run contract:import",
    "contract:interface": "ts-node --project tsconfig.typechain.json ./utils/TypeChain/lib/cli.ts -p typechain.json"
  },
  "nodeGypRebuild": "true",
  "dependencies": {
    "@ledgerhq/hw-transport-u2f": "^4.20.0",
    "@ledgerhq/web3-subprovider": "^4.20.0",
    "@muzika/core": "*",
    "@ngrx/effects": "^6.1.0",
    "@ngrx/store": "^6.1.0",
    "@ngx-translate/core": "^10.0.2",
    "@ngx-translate/http-loader": "^3.0.1",
    "aes-js": "^3.1.1",
    "alertify.js": "^1.0.12",
    "angular-froala-wysiwyg": "^2.8.4",
    "bignumber.js": "^5.0.0",
    "bl": "^2.0.1",
    "bn.js": "^4.11.8",
    "bootstrap": "^4.1.2",
    "buffer": "^5.1.0",
    "chalk": "^2.4.1",
    "classlist.js": "^1.1.20150312",
    "command-exists": "^1.2.7",
    "core-js": "^2.5.7",
    "crypto-browserify": "^3.12.0",
    "deserialize-error": "0.0.3",
    "domino": "^2.0.3",
    "electron-redux": "^1.3.1",
    "electron-updater": "^3.0.3",
    "eth-sig-util": "^1.4.2",
    "ethereumjs-abi": "^0.6.5",
    "ethereumjs-util": "^5.2.0",
    "ethereumjs-wallet": "^0.6.2",
    "ethereumjs-wallet-browser": "^0.6.0",
    "ffmpeg-static": "^2.3.0",
    "ffprobe-static": "^2.0.0",
    "fluent-ffmpeg": "^2.1.2",
    "froala-editor": "2.8.1",
    "fs-extra": "^5.0.0",
    "go-ipfs-wrapper": "^0.1.1",
    "hash.js": "^1.1.5",
    "hls.js": "^0.9.1",
    "imagemagick": "^0.1.3",
    "ipfs": "^0.31.7",
    "ipfs-api": "^24.0.1",
    "jquery": "^3.3.1",
    "ngx-bootstrap": "^3.0.1",
    "ngx-uploader": "^6.0.1",
    "ontology-dapi": "^0.3.12",
    "ontology-ts-sdk": "^0.9.4",
    "particles.js": "^2.0.0",
    "popper.js": "^1.14.3",
    "raven-js": "^3.26.4",
    "redux": "^4.0.0",
    "rxjs": "6.2.0",
    "rxjs-compat": "6.2.0",
    "safe-buffer": "^5.1.2",
    "serialize-error": "^2.1.0",
    "stream-browserify": "^2.0.1",
    "tassign": "^1.0.0",
    "tempfile": "^2.0.0",
    "truffle-contract": "^3.0.6",
    "vm-browserify": "^1.1.0",
    "web3": "^0.20.6",
    "web3-provider-engine": "^14.0.6",
    "zcash-bitcore-lib": "git+https://github.com/MuzikaFoundation/zcash-bitcore-lib.git",
    "zone.js": "^0.8.26"
  },
  "devDependencies": {
    "@0xproject/types": "^0.6.1",
    "@0xproject/typescript-typings": "^0.3.2",
    "@angular-devkit/build-angular": "^0.7.5",
    "@angular-devkit/build-ng-packagr": "^0.7.5",
    "@angular-redux/store": "^9.0.0",
    "@angular/animations": "^6.1.6",
    "@angular/cdk": "^6.4.7",
    "@angular/cli": "^6.1.5",
    "@angular/common": "^6.1.6",
    "@angular/compiler": "^6.1.6",
    "@angular/compiler-cli": "^6.1.6",
    "@angular/core": "^6.1.6",
    "@angular/forms": "^6.1.6",
    "@angular/http": "^6.1.6",
    "@angular/language-service": "^6.1.6",
    "@angular/material": "^6.4.7",
    "@angular/platform-browser": "^6.1.6",
    "@angular/platform-browser-dynamic": "^6.1.6",
    "@angular/router": "^6.1.6",
    "@angularclass/hmr": "^2.1.3",
    "@types/jasmine": "^2.8.8",
    "@types/jasminewd2": "^2.0.3",
    "@types/node": "~8.9.4",
    "babel-plugin-transform-async-to-generator": "^6.24.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-polyfill": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-es2016-node5": "^1.1.2",
    "babel-preset-stage-2": "^6.24.1",
    "babel-preset-stage-3": "^6.24.1",
    "babel-register": "^6.26.0",
    "browserify": "^16.2.2",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "chai-bignumber": "^2.0.2",
    "codelyzer": "^4.4.2",
    "command-line-args": "^5.0.2",
    "cross-env": "^5.1.6",
    "devtron": "^1.4.0",
    "electron": "3.0.0",
    "electron-builder": "^20.28.4",
    "electron-compile": "^6.4.3",
    "electron-compilers": "^5.9.0",
    "electron-prebuilt-compile": "^3.0.0",
    "electron-reload": "^1.2.5",
    "jasmine-core": "^3.1.0",
    "jasmine-spec-reporter": "^4.2.1",
    "karma": "~1.7.1",
    "karma-chrome-launcher": "^2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.2",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "lerna": "^2.11.0",
    "ng-packagr": "^4.0.0",
    "npm-run-all": "^4.1.3",
    "npx": "10.2.0",
    "prettier": "^1.13.7",
    "protractor": "^5.4.0",
    "replace": "^1.0.0",
    "solium": "git+https://github.com/duaraghav8/Solium.git#develop",
    "truffle": "^4.1.13",
    "ts-loader": "^4.4.2",
    "ts-node": "^6.2.0",
    "tslint": "^5.11.0",
    "typescript": "2.7.2",
    "wait-on": "^2.1.0",
    "webpack-cli": "^2.1.5"
  },
  "cordova": {
    "plugins": {
      "cordova-plugin-whitelist": {},
      "cordova-plugin-device": {},
      "cordova-plugin-splashscreen": {},
      "cordova-plugin-ionic-webview": {},
      "cordova-plugin-ionic-keyboard": {},
      "cordova-sqlite-storage": {},
      "cordova-plugin-nativestorage": {}
    },
    "platforms": [
      "android",
      "ios"
    ]
  }
}
